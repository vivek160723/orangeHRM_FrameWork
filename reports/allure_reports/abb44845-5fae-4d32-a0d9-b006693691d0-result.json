{"name": "test_invalid_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"txtUsername\"]\"}\n  (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x000000010539a138 cxxbridge1$str$ptr + 3653888\n1   chromedriver                        0x0000000105392988 cxxbridge1$str$ptr + 3623248\n2   chromedriver                        0x0000000104df8968 cxxbridge1$string$len + 89228\n3   chromedriver                        0x0000000104e3cd4c cxxbridge1$string$len + 368752\n4   chromedriver                        0x0000000104e764f0 cxxbridge1$string$len + 604180\n5   chromedriver                        0x0000000104e31564 cxxbridge1$string$len + 321672\n6   chromedriver                        0x0000000104e321b4 cxxbridge1$string$len + 324824\n7   chromedriver                        0x0000000105364fc0 cxxbridge1$str$ptr + 3436424\n8   chromedriver                        0x00000001053682dc cxxbridge1$str$ptr + 3449508\n9   chromedriver                        0x000000010534be60 cxxbridge1$str$ptr + 3333672\n10  chromedriver                        0x0000000105368b9c cxxbridge1$str$ptr + 3451748\n11  chromedriver                        0x000000010533d678 cxxbridge1$str$ptr + 3274304\n12  chromedriver                        0x00000001053832b4 cxxbridge1$str$ptr + 3560060\n13  chromedriver                        0x0000000105383430 cxxbridge1$str$ptr + 3560440\n14  chromedriver                        0x00000001053925fc cxxbridge1$str$ptr + 3622340\n15  libsystem_pthread.dylib             0x00000001810582e4 _pthread_start + 136\n16  libsystem_pthread.dylib             0x00000001810530fc thread_start + 8", "trace": "@pytest.mark.login\n    def test_invalid_login():\n        driver = init_driver(browser=\"chrome\")\n        driver.get(\"https://opensource-demo.orangehrmlive.com/\")\n    \n        login_page = LoginPage(driver)\n>       login_page.enter_username(\"invalid_user\")\n\ntests/test_login.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/login_page.py:12: in enter_username\n    self.driver.find_element(*self.username_field).send_keys(username)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1048d4190>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...0001810582e4 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x00000001810530fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"txtUsername\"]\"}\nE         (Session info: chrome=131.0.6778.265); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010539a138 cxxbridge1$str$ptr + 3653888\nE       1   chromedriver                        0x0000000105392988 cxxbridge1$str$ptr + 3623248\nE       2   chromedriver                        0x0000000104df8968 cxxbridge1$string$len + 89228\nE       3   chromedriver                        0x0000000104e3cd4c cxxbridge1$string$len + 368752\nE       4   chromedriver                        0x0000000104e764f0 cxxbridge1$string$len + 604180\nE       5   chromedriver                        0x0000000104e31564 cxxbridge1$string$len + 321672\nE       6   chromedriver                        0x0000000104e321b4 cxxbridge1$string$len + 324824\nE       7   chromedriver                        0x0000000105364fc0 cxxbridge1$str$ptr + 3436424\nE       8   chromedriver                        0x00000001053682dc cxxbridge1$str$ptr + 3449508\nE       9   chromedriver                        0x000000010534be60 cxxbridge1$str$ptr + 3333672\nE       10  chromedriver                        0x0000000105368b9c cxxbridge1$str$ptr + 3451748\nE       11  chromedriver                        0x000000010533d678 cxxbridge1$str$ptr + 3274304\nE       12  chromedriver                        0x00000001053832b4 cxxbridge1$str$ptr + 3560060\nE       13  chromedriver                        0x0000000105383430 cxxbridge1$str$ptr + 3560440\nE       14  chromedriver                        0x00000001053925fc cxxbridge1$str$ptr + 3622340\nE       15  libsystem_pthread.dylib             0x00000001810582e4 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x00000001810530fc thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException"}, "start": 1737120415490, "stop": 1737120421689, "uuid": "b92f63e5-0cbb-4e5d-afd6-f5f3c8775efc", "historyId": "6485cd1aa206d185bd707f422a9a9238", "testCaseId": "6485cd1aa206d185bd707f422a9a9238", "fullName": "tests.test_login#test_invalid_login", "labels": [{"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "viveks-MacBook-Air.local"}, {"name": "thread", "value": "5220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}