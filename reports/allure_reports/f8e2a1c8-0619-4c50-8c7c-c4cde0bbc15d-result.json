{"name": "test_empty_password", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000101212138 cxxbridge1$str$ptr + 3653888\n1   chromedriver                        0x000000010120a988 cxxbridge1$str$ptr + 3623248\n2   chromedriver                        0x0000000100c70968 cxxbridge1$string$len + 89228\n3   chromedriver                        0x0000000100cb4d4c cxxbridge1$string$len + 368752\n4   chromedriver                        0x0000000100cee4f0 cxxbridge1$string$len + 604180\n5   chromedriver                        0x0000000100ca9564 cxxbridge1$string$len + 321672\n6   chromedriver                        0x0000000100caa1b4 cxxbridge1$string$len + 324824\n7   chromedriver                        0x00000001011dcfc0 cxxbridge1$str$ptr + 3436424\n8   chromedriver                        0x00000001011e02dc cxxbridge1$str$ptr + 3449508\n9   chromedriver                        0x00000001011c3e60 cxxbridge1$str$ptr + 3333672\n10  chromedriver                        0x00000001011e0b9c cxxbridge1$str$ptr + 3451748\n11  chromedriver                        0x00000001011b5678 cxxbridge1$str$ptr + 3274304\n12  chromedriver                        0x00000001011fb2b4 cxxbridge1$str$ptr + 3560060\n13  chromedriver                        0x00000001011fb430 cxxbridge1$str$ptr + 3560440\n14  chromedriver                        0x000000010120a5fc cxxbridge1$str$ptr + 3622340\n15  libsystem_pthread.dylib             0x00000001810582e4 _pthread_start + 136\n16  libsystem_pthread.dylib             0x00000001810530fc thread_start + 8", "trace": "@pytest.mark.login\n    def test_empty_password():\n        driver = init_driver(browser=\"chrome\")\n        try:\n            logger.info(\"Testing empty password...\")\n            driver.get(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n    \n            login_page = LoginPage(driver)\n            login_page.enter_username(\"Admin\")\n            login_page.enter_password(\"\")\n            login_page.click_login()\n    \n>           error_message = login_page.get_error_message()\n\ntests/test_login.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/login_page.py:29: in get_error_message\n    return WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"478238b5b8f1594eb76b5a27840ad20b\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x103540720>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000101212138 cxxbridge1$str$ptr + 3653888\nE       1   chromedriver                        0x000000010120a988 cxxbridge1$str$ptr + 3623248\nE       2   chromedriver                        0x0000000100c70968 cxxbridge1$string$len + 89228\nE       3   chromedriver                        0x0000000100cb4d4c cxxbridge1$string$len + 368752\nE       4   chromedriver                        0x0000000100cee4f0 cxxbridge1$string$len + 604180\nE       5   chromedriver                        0x0000000100ca9564 cxxbridge1$string$len + 321672\nE       6   chromedriver                        0x0000000100caa1b4 cxxbridge1$string$len + 324824\nE       7   chromedriver                        0x00000001011dcfc0 cxxbridge1$str$ptr + 3436424\nE       8   chromedriver                        0x00000001011e02dc cxxbridge1$str$ptr + 3449508\nE       9   chromedriver                        0x00000001011c3e60 cxxbridge1$str$ptr + 3333672\nE       10  chromedriver                        0x00000001011e0b9c cxxbridge1$str$ptr + 3451748\nE       11  chromedriver                        0x00000001011b5678 cxxbridge1$str$ptr + 3274304\nE       12  chromedriver                        0x00000001011fb2b4 cxxbridge1$str$ptr + 3560060\nE       13  chromedriver                        0x00000001011fb430 cxxbridge1$str$ptr + 3560440\nE       14  chromedriver                        0x000000010120a5fc cxxbridge1$str$ptr + 3622340\nE       15  libsystem_pthread.dylib             0x00000001810582e4 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x00000001810530fc thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "54d239db-f8ca-4f1f-831f-2acb7d3546ae-attachment.txt", "type": "text/plain"}], "start": 1737121511442, "stop": 1737121536256, "uuid": "c00e0ab7-d507-49d3-8e6d-0a782144e85a", "historyId": "88e36ba967450484aa68bcde84522dcf", "testCaseId": "88e36ba967450484aa68bcde84522dcf", "fullName": "tests.test_login#test_empty_password", "labels": [{"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "viveks-MacBook-Air.local"}, {"name": "thread", "value": "5962-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}